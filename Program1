abstract class Robber {
    public abstract void RobbingClass();

    public void MachineLearning() {
        System.out.println("I love MachineLearning.");
    }
}

class JAVAProfessionalRobber extends Robber {
    int max = 0;

    @Override
    public void RobbingClass() {
        System.out.println("MScAI&ML");
    }

    int RowHouses(int[] money) {
        int n = money.length;
        if (n == 0) return 0;

        int[] dp = new int[n];
        dp[0] = money[0];

        for (int i = 1; i < n; i++) {
            dp[i] = Math.max(dp[i - 1], i - 2 >= 0 ? dp[i - 2] + money[i] : money[i]);
        }

        return dp[n - 1];
    }

    int RoundHouses(int[] money) {
        int n = money.length;
        if (n == 0) return 0;

        int[] dp = new int[n];
        dp[0] = money[0];
        dp[1] = Math.max(money[0], money[1]);

        for (int i = 2; i < n; i++) {
            dp[i] = Math.max(dp[i - 1], dp[i - 2] + money[i]);
        }

        return dp[n - 1];
    }

    int SquareHouse(int[] money) {
        int n = money.length;
        if (n == 0) return 0;

        int[] dp = new int[n];
        dp[0] = money[0];
        dp[1] = Math.max(money[0], money[1]);

        for (int i = 2; i < n; i++) {
            dp[i] = Math.max(dp[i - 1], dp[i - 2] + money[i]);
        }

        return dp[n - 1];
    }

    int MultiHouseBuilding(int[][] money) {
        int m = money.length;
        int n = money[0].length;
        if (m == 0 || n == 0) return 0;

        int[][] dp = new int[m][n];
        dp[0][0] = money[0][0];

        for (int i = 1; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int maxPrevRow = i - 2 >= 0 ? getMax(dp[i - 2]) : 0;
                dp[i][j] = Math.max(dp[i - 1][j], maxPrevRow + money[i][j]);
            }
        }

        return getMax(dp[m - 1]);
    }

    private int getMax(int[] arr) {
        int max = arr[0];
        for (int num : arr) {
            max = Math.max(max, num);
        }
        return max;
    }
}

public class MAIN {
    public static void main(String[] args) {
        JAVAProfessionalRobber j = new JAVAProfessionalRobber();
        j.RobbingClass();
        j.MachineLearning();

        int result = j.RowHouses(new int[]{1, 2, 3, 0});
        System.out.println("Maximum money that can be robbed from RowHouses: " + result);

        int result2 = j.RoundHouses(new int[]{1, 2, 3, 4});
        System.out.println("Maximum money that can be robbed from RoundHouses: " + result2);

        int result3 = j.SquareHouse(new int[]{5, 10, 2, 7});
        System.out.println("Maximum money that can be robbed from SquareHouse: " + result3);

        int result4 = j.MultiHouseBuilding(new int[][]{
                {5, 3, 8, 2},
                {10, 12, 7, 6},
                {4, 9, 11, 5},
                {8, 6, 3, 7}
        });
        System.out.println("Maximum money that can be robbed from MultiHouseBuilding: " + result4);
    }
}
